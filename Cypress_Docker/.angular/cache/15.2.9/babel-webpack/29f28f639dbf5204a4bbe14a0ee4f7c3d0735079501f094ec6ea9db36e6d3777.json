{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { switchMap, takeUntil } from \"rxjs/operators\";\nimport { EMPTY, Subject } from \"rxjs\";\nimport { NgClass } from \"@angular/common\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/profile.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../core/services/user.service\";\nconst _c0 = function (a0, a1, a2) {\n  return {\n    disabled: a0,\n    \"btn-outline-secondary\": a1,\n    \"btn-secondary\": a2\n  };\n};\nexport class FollowButtonComponent {\n  constructor(profileService, router, userService) {\n    this.profileService = profileService;\n    this.router = router;\n    this.userService = userService;\n    this.toggle = new EventEmitter();\n    this.isSubmitting = false;\n    this.destroy$ = new Subject();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  toggleFollowing() {\n    this.isSubmitting = true;\n    this.userService.isAuthenticated.pipe(switchMap(isAuthenticated => {\n      if (!isAuthenticated) {\n        void this.router.navigate([\"/login\"]);\n        return EMPTY;\n      }\n      if (!this.profile.following) {\n        return this.profileService.follow(this.profile.username);\n      } else {\n        return this.profileService.unfollow(this.profile.username);\n      }\n    }), takeUntil(this.destroy$)).subscribe({\n      next: profile => {\n        this.isSubmitting = false;\n        this.toggle.emit(profile);\n      },\n      error: () => this.isSubmitting = false\n    });\n  }\n  static #_ = this.ɵfac = function FollowButtonComponent_Factory(t) {\n    return new (t || FollowButtonComponent)(i0.ɵɵdirectiveInject(i1.ProfileService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FollowButtonComponent,\n    selectors: [[\"app-follow-button\"]],\n    inputs: {\n      profile: \"profile\"\n    },\n    outputs: {\n      toggle: \"toggle\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 7,\n    consts: [[1, \"btn\", \"btn-sm\", \"action-btn\", 3, \"ngClass\", \"click\"], [1, \"ion-plus-round\"]],\n    template: function FollowButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function FollowButtonComponent_Template_button_click_0_listener() {\n          return ctx.toggleFollowing();\n        });\n        i0.ɵɵelement(1, \"i\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(3, _c0, ctx.isSubmitting, !ctx.profile.following, ctx.profile.following));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\" \\u00A0 \", ctx.profile.following ? \"Unfollow\" : \"Follow\", \" \", ctx.profile.username, \"\\n\");\n      }\n    },\n    dependencies: [NgClass],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"AAAA,SAEEA,YAAY,QAIP,eAAe;AAEtB,SAASC,SAAS,EAAEC,SAAS,QAAQ,gBAAgB;AACrD,SAASC,KAAK,EAAEC,OAAO,QAAQ,MAAM;AAIrC,SAASC,OAAO,QAAQ,iBAAiB;;;;;;;;;;;;AAQzC,OAAM,MAAOC,qBAAqB;EAMhCC,YACmBC,cAA8B,EAC9BC,MAAc,EACdC,WAAwB;IAFxB,mBAAc,GAAdF,cAAc;IACd,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAPpB,WAAM,GAAG,IAAIV,YAAY,EAAW;IAC9C,iBAAY,GAAG,KAAK;IACpB,aAAQ,GAAG,IAAII,OAAO,EAAQ;EAM3B;EAEHO,WAAW;IACT,IAAI,CAACC,QAAQ,CAACC,IAAI,EAAE;IACpB,IAAI,CAACD,QAAQ,CAACE,QAAQ,EAAE;EAC1B;EAEAC,eAAe;IACb,IAAI,CAACC,YAAY,GAAG,IAAI;IAExB,IAAI,CAACN,WAAW,CAACO,eAAe,CAC7BC,IAAI,CACHjB,SAAS,CAAEgB,eAAwB,IAAI;MACrC,IAAI,CAACA,eAAe,EAAE;QACpB,KAAK,IAAI,CAACR,MAAM,CAACU,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QACrC,OAAOhB,KAAK;;MAGd,IAAI,CAAC,IAAI,CAACiB,OAAO,CAACC,SAAS,EAAE;QAC3B,OAAO,IAAI,CAACb,cAAc,CAACc,MAAM,CAAC,IAAI,CAACF,OAAO,CAACG,QAAQ,CAAC;OACzD,MAAM;QACL,OAAO,IAAI,CAACf,cAAc,CAACgB,QAAQ,CAAC,IAAI,CAACJ,OAAO,CAACG,QAAQ,CAAC;;IAE9D,CAAC,CAAC,EACFrB,SAAS,CAAC,IAAI,CAACU,QAAQ,CAAC,CACzB,CACAa,SAAS,CAAC;MACTZ,IAAI,EAAGO,OAAO,IAAI;QAChB,IAAI,CAACJ,YAAY,GAAG,KAAK;QACzB,IAAI,CAACU,MAAM,CAACC,IAAI,CAACP,OAAO,CAAC;MAC3B,CAAC;MACDQ,KAAK,EAAE,MAAO,IAAI,CAACZ,YAAY,GAAG;KACnC,CAAC;EACN;EAAC;qBA3CUV,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAAuB;IAAAC;MAAAV;IAAA;IAAAW;MAAAL;IAAA;IAAAM;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCrBlCC,iCAQC;QADCA;UAAA,OAASC,qBAAiB;QAAA,EAAC;QAE3BD,uBAA8B;QAC9BA,YAEF;QAAAA,iBAAS;;;QAVPA,qHAIE;QAIFA,eAEF;QAFEA,iHAEF;;;mBDMYjC,OAAO;IAAAmC;EAAA","names":["EventEmitter","switchMap","takeUntil","EMPTY","Subject","NgClass","FollowButtonComponent","constructor","profileService","router","userService","ngOnDestroy","destroy$","next","complete","toggleFollowing","isSubmitting","isAuthenticated","pipe","navigate","profile","following","follow","username","unfollow","subscribe","toggle","emit","error","selectors","inputs","outputs","standalone","features","decls","vars","consts","template","i0","ctx","encapsulation"],"sourceRoot":"","sources":["C:\\Users\\LuciaD'Alfonso\\Desktop\\Cypress\\angular-realworld-example-app-docker\\src\\app\\shared\\buttons\\follow-button.component.ts","C:\\Users\\LuciaD'Alfonso\\Desktop\\Cypress\\angular-realworld-example-app-docker\\src\\app\\shared\\buttons\\follow-button.component.html"],"sourcesContent":["import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n} from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { switchMap, takeUntil } from \"rxjs/operators\";\r\nimport { EMPTY, Subject } from \"rxjs\";\r\nimport { ProfileService } from \"../../core/services/profile.service\";\r\nimport { UserService } from \"../../core/services/user.service\";\r\nimport { Profile } from \"../../core/models/profile.model\";\r\nimport { NgClass } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-follow-button\",\r\n  templateUrl: \"./follow-button.component.html\",\r\n  imports: [NgClass],\r\n  standalone: true,\r\n})\r\nexport class FollowButtonComponent implements OnDestroy {\r\n  @Input() profile!: Profile;\r\n  @Output() toggle = new EventEmitter<Profile>();\r\n  isSubmitting = false;\r\n  destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private readonly profileService: ProfileService,\r\n    private readonly router: Router,\r\n    private readonly userService: UserService\r\n  ) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  toggleFollowing(): void {\r\n    this.isSubmitting = true;\r\n\r\n    this.userService.isAuthenticated\r\n      .pipe(\r\n        switchMap((isAuthenticated: boolean) => {\r\n          if (!isAuthenticated) {\r\n            void this.router.navigate([\"/login\"]);\r\n            return EMPTY;\r\n          }\r\n\r\n          if (!this.profile.following) {\r\n            return this.profileService.follow(this.profile.username);\r\n          } else {\r\n            return this.profileService.unfollow(this.profile.username);\r\n          }\r\n        }),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe({\r\n        next: (profile) => {\r\n          this.isSubmitting = false;\r\n          this.toggle.emit(profile);\r\n        },\r\n        error: () => (this.isSubmitting = false),\r\n      });\r\n  }\r\n}\r\n","<button\r\n  class=\"btn btn-sm action-btn\"\r\n  [ngClass]=\"{\r\n    disabled: isSubmitting,\r\n    'btn-outline-secondary': !profile.following,\r\n    'btn-secondary': profile.following\r\n  }\"\r\n  (click)=\"toggleFollowing()\"\r\n>\r\n  <i class=\"ion-plus-round\"></i>\r\n  &nbsp;\r\n  {{ profile.following ? \"Unfollow\" : \"Follow\" }} {{ profile.username }}\r\n</button>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}