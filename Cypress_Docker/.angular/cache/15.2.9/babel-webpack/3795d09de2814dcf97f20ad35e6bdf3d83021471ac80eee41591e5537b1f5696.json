{"ast":null,"code":"import { FormControl, FormGroup, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { ListErrorsComponent } from \"../../shared/list-errors.component\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../core/services/user.service\";\nimport * as i3 from \"@angular/forms\";\nexport class SettingsComponent {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n    this.settingsForm = new FormGroup({\n      image: new FormControl(\"\", {\n        nonNullable: true\n      }),\n      username: new FormControl(\"\", {\n        nonNullable: true\n      }),\n      bio: new FormControl(\"\", {\n        nonNullable: true\n      }),\n      email: new FormControl(\"\", {\n        nonNullable: true\n      }),\n      password: new FormControl(\"\", {\n        validators: [Validators.required],\n        nonNullable: true\n      })\n    });\n    this.errors = null;\n    this.isSubmitting = false;\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.settingsForm.patchValue(this.userService.getCurrentUser());\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  logout() {\n    this.userService.logout();\n  }\n  submitForm() {\n    this.isSubmitting = true;\n    this.userService.update(this.settingsForm.value).pipe(takeUntil(this.destroy$)).subscribe({\n      next: ({\n        user\n      }) => void this.router.navigate([\"/profile/\", user.username]),\n      error: err => {\n        this.errors = err;\n        this.isSubmitting = false;\n      }\n    });\n  }\n  static #_ = this.ɵfac = function SettingsComponent_Factory(t) {\n    return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsComponent,\n    selectors: [[\"app-settings-page\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 25,\n    vars: 3,\n    consts: [[1, \"settings-page\"], [1, \"container\", \"page\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\", \"col-xs-12\"], [1, \"text-xs-center\"], [3, \"errors\"], [3, \"formGroup\", \"ngSubmit\"], [3, \"disabled\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"URL of profile picture\", \"formControlName\", \"image\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"formControlName\", \"username\", 1, \"form-control\", \"form-control-lg\"], [\"rows\", \"8\", \"placeholder\", \"Short bio about you\", \"formControlName\", \"bio\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"password\", \"placeholder\", \"New Password\", \"formControlName\", \"password\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"pull-xs-right\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"]],\n    template: function SettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5, \"Your Settings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"app-list-errors\", 5);\n        i0.ɵɵelementStart(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function SettingsComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(8, \"fieldset\", 7)(9, \"fieldset\", 8);\n        i0.ɵɵelement(10, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"fieldset\", 8);\n        i0.ɵɵelement(12, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"fieldset\", 8)(14, \"textarea\", 11);\n        i0.ɵɵtext(15, \"              \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"fieldset\", 8);\n        i0.ɵɵelement(17, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"fieldset\", 8);\n        i0.ɵɵelement(19, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 14);\n        i0.ɵɵtext(21, \" Update Settings \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(22, \"hr\");\n        i0.ɵɵelementStart(23, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function SettingsComponent_Template_button_click_23_listener() {\n          return ctx.logout();\n        });\n        i0.ɵɵtext(24, \" Or click here to logout. \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"errors\", ctx.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.settingsForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.isSubmitting);\n      }\n    },\n    dependencies: [ListErrorsComponent, ReactiveFormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","ReactiveFormsModule","Validators","ListErrorsComponent","Subject","takeUntil","SettingsComponent","constructor","router","userService","image","nonNullable","username","bio","email","password","validators","required","ngOnInit","settingsForm","patchValue","getCurrentUser","ngOnDestroy","destroy$","next","complete","logout","submitForm","isSubmitting","update","value","pipe","subscribe","user","navigate","error","err","errors","selectors","standalone","features","decls","vars","consts","template","i0","ctx","encapsulation"],"sourceRoot":"","sources":["C:\\Progetti\\Test\\angular-realworld-example-app-docker\\src\\app\\features\\settings\\settings.component.ts","C:\\Progetti\\Test\\angular-realworld-example-app-docker\\src\\app\\features\\settings\\settings.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from \"../../core/models/user.model\";\r\nimport { UserService } from \"../../core/services/user.service\";\r\nimport { ListErrorsComponent } from \"../../shared/list-errors.component\";\r\nimport { Errors } from \"../../core/models/errors.model\";\r\nimport { Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\n\r\ninterface SettingsForm {\r\n  image: FormControl<string>;\r\n  username: FormControl<string>;\r\n  bio: FormControl<string>;\r\n  email: FormControl<string>;\r\n  password: FormControl<string>;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-settings-page\",\r\n  templateUrl: \"./settings.component.html\",\r\n  imports: [ListErrorsComponent, ReactiveFormsModule],\r\n  standalone: true,\r\n})\r\nexport class SettingsComponent implements OnInit, OnDestroy {\r\n  user!: User;\r\n  settingsForm = new FormGroup<SettingsForm>({\r\n    image: new FormControl(\"\", { nonNullable: true }),\r\n    username: new FormControl(\"\", { nonNullable: true }),\r\n    bio: new FormControl(\"\", { nonNullable: true }),\r\n    email: new FormControl(\"\", { nonNullable: true }),\r\n    password: new FormControl(\"\", {\r\n      validators: [Validators.required],\r\n      nonNullable: true,\r\n    }),\r\n  });\r\n  errors: Errors | null = null;\r\n  isSubmitting = false;\r\n  destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private readonly router: Router,\r\n    private readonly userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.settingsForm.patchValue(\r\n      this.userService.getCurrentUser() as Partial<User>\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  logout(): void {\r\n    this.userService.logout();\r\n  }\r\n\r\n  submitForm() {\r\n    this.isSubmitting = true;\r\n\r\n    this.userService\r\n      .update(this.settingsForm.value)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: ({ user }) =>\r\n          void this.router.navigate([\"/profile/\", user.username]),\r\n        error: (err) => {\r\n          this.errors = err;\r\n          this.isSubmitting = false;\r\n        },\r\n      });\r\n  }\r\n}\r\n","<div class=\"settings-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n        <h1 class=\"text-xs-center\">Your Settings</h1>\r\n\r\n        <app-list-errors [errors]=\"errors\"></app-list-errors>\r\n\r\n        <form [formGroup]=\"settingsForm\" (ngSubmit)=\"submitForm()\">\r\n          <fieldset [disabled]=\"isSubmitting\">\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"URL of profile picture\"\r\n                formControlName=\"image\"\r\n              />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                class=\"form-control form-control-lg\"\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                formControlName=\"username\"\r\n              />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <textarea\r\n                class=\"form-control form-control-lg\"\r\n                rows=\"8\"\r\n                placeholder=\"Short bio about you\"\r\n                formControlName=\"bio\"\r\n              >\r\n              </textarea>\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                class=\"form-control form-control-lg\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                formControlName=\"email\"\r\n              />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                class=\"form-control form-control-lg\"\r\n                type=\"password\"\r\n                placeholder=\"New Password\"\r\n                formControlName=\"password\"\r\n              />\r\n            </fieldset>\r\n\r\n            <button class=\"btn btn-lg btn-primary pull-xs-right\" type=\"submit\">\r\n              Update Settings\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n\r\n        <!-- Line break for logout button -->\r\n        <hr />\r\n\r\n        <button class=\"btn btn-outline-danger\" (click)=\"logout()\">\r\n          Or click here to logout.\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}