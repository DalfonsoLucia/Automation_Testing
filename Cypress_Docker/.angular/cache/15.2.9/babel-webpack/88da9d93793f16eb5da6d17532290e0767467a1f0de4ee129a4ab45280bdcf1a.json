{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/user.service\";\nexport class ShowAuthedDirective {\n  constructor(templateRef, userService, viewContainer) {\n    this.templateRef = templateRef;\n    this.userService = userService;\n    this.viewContainer = viewContainer;\n    this.condition = false;\n  }\n  ngOnInit() {\n    this.userService.isAuthenticated.subscribe(isAuthenticated => {\n      if (isAuthenticated && this.condition || !isAuthenticated && !this.condition) {\n        this.viewContainer.createEmbeddedView(this.templateRef);\n      } else {\n        this.viewContainer.clear();\n      }\n    });\n  }\n  set appShowAuthed(condition) {\n    this.condition = condition;\n  }\n  static #_ = this.ɵfac = function ShowAuthedDirective_Factory(t) {\n    return new (t || ShowAuthedDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ShowAuthedDirective,\n    selectors: [[\"\", \"appShowAuthed\", \"\"]],\n    inputs: {\n      appShowAuthed: \"appShowAuthed\"\n    },\n    standalone: true\n  });\n}","map":{"version":3,"mappings":";;AAaA,OAAM,MAAOA,mBAAmB;EAC9BC,YACUC,WAA6B,EAC7BC,WAAwB,EACxBC,aAA+B;IAF/B,gBAAW,GAAXF,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,kBAAa,GAAbC,aAAa;IAGvB,cAAS,GAAY,KAAK;EAFvB;EAIHC,QAAQ;IACN,IAAI,CAACF,WAAW,CAACG,eAAe,CAACC,SAAS,CAAED,eAAwB,IAAI;MACtE,IACGA,eAAe,IAAI,IAAI,CAACE,SAAS,IACjC,CAACF,eAAe,IAAI,CAAC,IAAI,CAACE,SAAU,EACrC;QACA,IAAI,CAACJ,aAAa,CAACK,kBAAkB,CAAC,IAAI,CAACP,WAAW,CAAC;OACxD,MAAM;QACL,IAAI,CAACE,aAAa,CAACM,KAAK,EAAE;;IAE9B,CAAC,CAAC;EACJ;EAEA,IAAaC,aAAa,CAACH,SAAkB;IAC3C,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC5B;EAAC;qBAxBUR,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAY;IAAAC;MAAAF;IAAA;IAAAG;EAAA","names":["ShowAuthedDirective","constructor","templateRef","userService","viewContainer","ngOnInit","isAuthenticated","subscribe","condition","createEmbeddedView","clear","appShowAuthed","selectors","inputs","standalone"],"sourceRoot":"","sources":["C:\\Progetti\\Test\\angular-realworld-example-app-docker\\src\\app\\shared\\show-authed.directive.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from \"@angular/core\";\r\nimport { UserService } from \"../core/services/user.service\";\r\n\r\n@Directive({\r\n  selector: \"[appShowAuthed]\",\r\n  standalone: true,\r\n})\r\nexport class ShowAuthedDirective implements OnInit {\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private userService: UserService,\r\n    private viewContainer: ViewContainerRef\r\n  ) {}\r\n\r\n  condition: boolean = false;\r\n\r\n  ngOnInit() {\r\n    this.userService.isAuthenticated.subscribe((isAuthenticated: boolean) => {\r\n      if (\r\n        (isAuthenticated && this.condition) ||\r\n        (!isAuthenticated && !this.condition)\r\n      ) {\r\n        this.viewContainer.createEmbeddedView(this.templateRef);\r\n      } else {\r\n        this.viewContainer.clear();\r\n      }\r\n    });\r\n  }\r\n\r\n  @Input() set appShowAuthed(condition: boolean) {\r\n    this.condition = condition;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}