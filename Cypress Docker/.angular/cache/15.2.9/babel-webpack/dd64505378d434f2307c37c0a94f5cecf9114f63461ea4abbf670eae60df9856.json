{"ast":null,"code":"import { ReactiveFormsModule, FormGroup, FormControl } from \"@angular/forms\";\nimport { ListErrorsComponent } from \"../../shared/list-errors.component\";\nimport { NgForOf } from \"@angular/common\";\nimport { combineLatest, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/articles.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../core/services/user.service\";\nimport * as i4 from \"@angular/forms\";\nfunction EditorComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 15)(1, \"i\", 16);\n    i0.ɵɵlistener(\"click\", function EditorComponent_span_17_Template_i_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const tag_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeTag(tag_r1));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", tag_r1, \" \");\n  }\n}\nexport class EditorComponent {\n  constructor(articleService, route, router, userService) {\n    this.articleService = articleService;\n    this.route = route;\n    this.router = router;\n    this.userService = userService;\n    this.tagList = [];\n    this.articleForm = new FormGroup({\n      title: new FormControl(\"\", {\n        nonNullable: true\n      }),\n      description: new FormControl(\"\", {\n        nonNullable: true\n      }),\n      body: new FormControl(\"\", {\n        nonNullable: true\n      })\n    });\n    this.tagField = new FormControl(\"\", {\n      nonNullable: true\n    });\n    this.errors = null;\n    this.isSubmitting = false;\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    combineLatest([this.articleService.get(this.route.snapshot.params[\"slug\"]), this.userService.getCurrentUser()]).pipe(takeUntil(this.destroy$)).subscribe(([article, {\n      user\n    }]) => {\n      if (user.username === article.author.username) {\n        this.tagList = article.tagList;\n        this.articleForm.patchValue(article);\n      } else {\n        void this.router.navigate([\"/\"]);\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  addTag() {\n    // retrieve tag control\n    const tag = this.tagField.value;\n    // only add tag if it does not exist yet\n    if (tag != null && tag.trim() !== \"\" && this.tagList.indexOf(tag) < 0) {\n      this.tagList.push(tag);\n    }\n    // clear the input\n    this.tagField.reset(\"\");\n  }\n  removeTag(tagName) {\n    this.tagList = this.tagList.filter(tag => tag !== tagName);\n  }\n  submitForm() {\n    this.isSubmitting = true;\n    // update any single tag\n    this.addTag();\n    // post the changes\n    this.articleService.create({\n      ...this.articleForm.value,\n      tagList: this.tagList\n    }).pipe(takeUntil(this.destroy$)).subscribe({\n      next: article => this.router.navigate([\"/article/\", article.slug]),\n      error: err => {\n        this.errors = err;\n        this.isSubmitting = false;\n      }\n    });\n  }\n  static #_ = this.ɵfac = function EditorComponent_Factory(t) {\n    return new (t || EditorComponent)(i0.ɵɵdirectiveInject(i1.ArticlesService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditorComponent,\n    selectors: [[\"app-editor-page\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 20,\n    vars: 5,\n    consts: [[1, \"editor-page\"], [1, \"container\", \"page\"], [1, \"row\"], [1, \"col-md-10\", \"offset-md-1\", \"col-xs-12\"], [3, \"errors\"], [3, \"formGroup\"], [3, \"disabled\"], [1, \"form-group\"], [\"formControlName\", \"title\", \"type\", \"text\", \"placeholder\", \"Article Title\", 1, \"form-control\", \"form-control-lg\"], [\"formControlName\", \"description\", \"type\", \"text\", \"placeholder\", \"What's this article about?\", 1, \"form-control\"], [\"formControlName\", \"body\", \"rows\", \"8\", \"placeholder\", \"Write your article (in markdown)\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Enter tags\", 1, \"form-control\", 3, \"formControl\", \"keyup.enter\"], [1, \"tag-list\"], [\"class\", \"tag-default tag-pill\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-lg\", \"pull-xs-right\", \"btn-primary\", 3, \"click\"], [1, \"tag-default\", \"tag-pill\"], [1, \"ion-close-round\", 3, \"click\"]],\n    template: function EditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"app-list-errors\", 4);\n        i0.ɵɵelementStart(5, \"form\", 5)(6, \"fieldset\", 6)(7, \"fieldset\", 7);\n        i0.ɵɵelement(8, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"fieldset\", 7);\n        i0.ɵɵelement(10, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"fieldset\", 7)(12, \"textarea\", 10);\n        i0.ɵɵtext(13, \"              \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"fieldset\", 7)(15, \"input\", 11);\n        i0.ɵɵlistener(\"keyup.enter\", function EditorComponent_Template_input_keyup_enter_15_listener() {\n          return ctx.addTag();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 12);\n        i0.ɵɵtemplate(17, EditorComponent_span_17_Template, 3, 1, \"span\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function EditorComponent_Template_button_click_18_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵtext(19, \" Publish Article \");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"errors\", ctx.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.articleForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.isSubmitting);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formControl\", ctx.tagField);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tagList);\n      }\n    },\n    dependencies: [ListErrorsComponent, ReactiveFormsModule, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormControlDirective, i4.FormGroupDirective, i4.FormControlName, NgForOf],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["ReactiveFormsModule","FormGroup","FormControl","ListErrorsComponent","NgForOf","combineLatest","Subject","takeUntil","i0","EditorComponent","constructor","articleService","route","router","userService","title","nonNullable","description","body","ngOnInit","get","snapshot","params","getCurrentUser","pipe","destroy$","subscribe","article","user","username","author","tagList","articleForm","patchValue","navigate","ngOnDestroy","next","complete","addTag","tag","tagField","value","trim","indexOf","push","reset","removeTag","tagName","filter","submitForm","isSubmitting","create","slug","error","err","errors","selectors","standalone","features","decls","vars","consts","template","ctx","encapsulation"],"sourceRoot":"","sources":["C:\\Progetti\\Test\\angular-realworld-example-app-docker\\src\\app\\features\\editor\\editor.component.ts","C:\\Progetti\\Test\\angular-realworld-example-app-docker\\src\\app\\features\\editor\\editor.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport {\r\n  UntypedFormGroup,\r\n  ReactiveFormsModule,\r\n  FormGroup,\r\n  FormControl,\r\n} from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ListErrorsComponent } from \"../../shared/list-errors.component\";\r\nimport { NgForOf } from \"@angular/common\";\r\nimport { ArticlesService } from \"../../core/services/articles.service\";\r\nimport { combineLatest, Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { UserService } from \"../../core/services/user.service\";\r\nimport { Errors } from \"../../core/models/errors.model\";\r\n\r\ninterface ArticleForm {\r\n  title: FormControl<string>;\r\n  description: FormControl<string>;\r\n  body: FormControl<string>;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-editor-page\",\r\n  templateUrl: \"./editor.component.html\",\r\n  imports: [ListErrorsComponent, ReactiveFormsModule, NgForOf],\r\n  standalone: true,\r\n})\r\nexport class EditorComponent implements OnInit, OnDestroy {\r\n  tagList: string[] = [];\r\n  articleForm: UntypedFormGroup = new FormGroup<ArticleForm>({\r\n    title: new FormControl(\"\", { nonNullable: true }),\r\n    description: new FormControl(\"\", { nonNullable: true }),\r\n    body: new FormControl(\"\", { nonNullable: true }),\r\n  });\r\n  tagField = new FormControl<string>(\"\", { nonNullable: true });\r\n\r\n  errors: Errors | null = null;\r\n  isSubmitting = false;\r\n  destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private readonly articleService: ArticlesService,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    combineLatest([\r\n      this.articleService.get(this.route.snapshot.params[\"slug\"]),\r\n      this.userService.getCurrentUser(),\r\n    ])\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(([article, { user }]) => {\r\n        if (user.username === article.author.username) {\r\n          this.tagList = article.tagList;\r\n          this.articleForm.patchValue(article);\r\n        } else {\r\n          void this.router.navigate([\"/\"]);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  addTag() {\r\n    // retrieve tag control\r\n    const tag = this.tagField.value;\r\n    // only add tag if it does not exist yet\r\n    if (tag != null && tag.trim() !== \"\" && this.tagList.indexOf(tag) < 0) {\r\n      this.tagList.push(tag);\r\n    }\r\n    // clear the input\r\n    this.tagField.reset(\"\");\r\n  }\r\n\r\n  removeTag(tagName: string): void {\r\n    this.tagList = this.tagList.filter((tag) => tag !== tagName);\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.isSubmitting = true;\r\n\r\n    // update any single tag\r\n    this.addTag();\r\n\r\n    // post the changes\r\n    this.articleService\r\n      .create({\r\n        ...this.articleForm.value,\r\n        tagList: this.tagList,\r\n      })\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (article) => this.router.navigate([\"/article/\", article.slug]),\r\n        error: (err) => {\r\n          this.errors = err;\r\n          this.isSubmitting = false;\r\n        },\r\n      });\r\n  }\r\n}\r\n","<div class=\"editor-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-10 offset-md-1 col-xs-12\">\r\n        <app-list-errors [errors]=\"errors\"></app-list-errors>\r\n\r\n        <form [formGroup]=\"articleForm\">\r\n          <fieldset [disabled]=\"isSubmitting\">\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                class=\"form-control form-control-lg\"\r\n                formControlName=\"title\"\r\n                type=\"text\"\r\n                placeholder=\"Article Title\"\r\n              />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                class=\"form-control\"\r\n                formControlName=\"description\"\r\n                type=\"text\"\r\n                placeholder=\"What's this article about?\"\r\n              />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <textarea\r\n                class=\"form-control\"\r\n                formControlName=\"body\"\r\n                rows=\"8\"\r\n                placeholder=\"Write your article (in markdown)\"\r\n              >\r\n              </textarea>\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Enter tags\"\r\n                [formControl]=\"tagField\"\r\n                (keyup.enter)=\"addTag()\"\r\n              />\r\n              <div class=\"tag-list\">\r\n                <span *ngFor=\"let tag of tagList\" class=\"tag-default tag-pill\">\r\n                  <i class=\"ion-close-round\" (click)=\"removeTag(tag)\"></i>\r\n                  {{ tag }}\r\n                </span>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <button\r\n              class=\"btn btn-lg pull-xs-right btn-primary\"\r\n              type=\"button\"\r\n              (click)=\"submitForm()\"\r\n            >\r\n              Publish Article\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}