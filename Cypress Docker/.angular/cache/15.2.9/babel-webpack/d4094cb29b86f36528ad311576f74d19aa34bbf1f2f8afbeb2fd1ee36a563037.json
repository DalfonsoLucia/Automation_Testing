{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ApiInterceptor {\n  intercept(req, next) {\n    const apiReq = req.clone({\n      url: `https://api.realworld.io/api${req.url}`\n    });\n    return next.handle(apiReq);\n  }\n  static #_ = this.ɵfac = function ApiInterceptor_Factory(t) {\n    return new (t || ApiInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiInterceptor,\n    factory: ApiInterceptor.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";AAUA,OAAM,MAAOA,cAAc;EACzBC,SAAS,CACPC,GAAqB,EACrBC,IAAiB;IAEjB,MAAMC,MAAM,GAAGF,GAAG,CAACG,KAAK,CAAC;MAAEC,GAAG,EAAE,+BAA+BJ,GAAG,CAACI,GAAG;IAAE,CAAE,CAAC;IAC3E,OAAOH,IAAI,CAACI,MAAM,CAACH,MAAM,CAAC;EAC5B;EAAC;qBAPUJ,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAQ,SAAdR,cAAc;IAAAS,YADD;EAAM","names":["ApiInterceptor","intercept","req","next","apiReq","clone","url","handle","factory","providedIn"],"sourceRoot":"","sources":["C:\\Progetti\\Test\\angular-realworld-example-app-docker\\src\\app\\core\\interceptors\\api.interceptor.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const apiReq = req.clone({ url: `https://api.realworld.io/api${req.url}` });\r\n    return next.handle(apiReq);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}